






Started logging.

<<<
Content-Length: 3179

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":17788,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"c:\\Users\\zhang'pei\\Documents\\Arduino\\libraries\\lvgl\\examples\\arduino\\LVGL_Arduino","rootUri":"file:///c%3A/Users/zhang%27pei/Documents/Arduino/libraries/lvgl/examples/arduino/LVGL_Arduino","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/zhang%27pei/Documents/Arduino/libraries/lvgl/examples/arduino/LVGL_Arduino","name":"LVGL_Arduino"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4258

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/zhang%27pei/Documents/Arduino/libraries/lvgl/examples/arduino/LVGL_Arduino/LVGL_Arduino.ino","languageId":"cpp","version":1,"text":"#include <lvgl.h>\n#include <TFT_eSPI.h>\n/*If you want to use the LVGL examples,\n  make sure to install the lv_examples Arduino library\n  and uncomment the following line.\n#include <lv_examples.h>\n*/\n\n#include <lv_demo.h>\n\n/*Change to your screen resolution*/\nstatic const uint16_t screenWidth  = 480;\nstatic const uint16_t screenHeight = 320;\n\nstatic lv_disp_draw_buf_t draw_buf;\nstatic lv_color_t buf[ screenWidth * 10 ];\n\nTFT_eSPI tft = TFT_eSPI(screenWidth, screenHeight); /* TFT instance */\n\n#if LV_USE_LOG != 0\n/* Serial debugging */\nvoid my_print(const char * buf)\n{\n    Serial.printf(buf);\n    Serial.flush();\n}\n#endif\n\n/* Display flushing */\nvoid my_disp_flush( lv_disp_drv_t *disp, const lv_area_t *area, lv_color_t *color_p )\n{\n    uint32_t w = ( area->x2 - area->x1 + 1 );\n    uint32_t h = ( area->y2 - area->y1 + 1 );\n\n    tft.startWrite();\n    tft.setAddrWindow( area->x1, area->y1, w, h );\n    tft.pushColors( ( uint16_t * )&color_p->full, w * h, true );\n    tft.endWrite();\n\n    lv_disp_flush_ready( disp );\n}\n\n/*Read the touchpad*/\nvoid my_touchpad_read( lv_indev_drv_t * indev_driver, lv_indev_data_t * data )\n{\n    uint16_t touchX, touchY;\n\n    bool touched = tft.getTouch( &touchX, &touchY, 600 );\n\n    if( !touched )\n    {\n        data->state = LV_INDEV_STATE_REL;\n    }\n    else\n    {\n        data->state = LV_INDEV_STATE_PR;\n\n        /*Set the coordinates*/\n        data->point.x = touchX;\n        data->point.y = touchY;\n\n        Serial.print( \"Data x \" );\n        Serial.println( touchX );\n\n        Serial.print( \"Data y \" );\n        Serial.println( touchY );\n    }\n}\n\nvoid setup()\n{\n    Serial.begin( 115200 ); /* prepare for possible serial debug */\n\n    String LVGL_Arduino = \"Hello Arduino! \";\n    LVGL_Arduino += String('V') + lv_version_major() + \".\" + lv_version_minor() + \".\" + lv_version_patch();\n\n    Serial.println( LVGL_Arduino );\n    Serial.println( \"I am LVGL_Arduino\" );\n\n    lv_init();\n\n#if LV_USE_LOG != 0\n    lv_log_register_print_cb( my_print ); /* register print function for debugging */\n#endif\n\n    tft.begin();          /* TFT init */\n    tft.setRotation( 3 ); /* Landscape orientation, flipped */\n\n    /*Set the touchscreen calibration data,\n     the actual data for your display can be acquired using\n     the Generic -> Touch_calibrate example from the TFT_eSPI library*/\n    uint16_t calData[5] = { 275, 3620, 264, 3532, 1 };\n    tft.setTouch( calData );\n\n    lv_disp_draw_buf_init( &draw_buf, buf, NULL, screenWidth * 10 );\n\n    /*Initialize the display*/\n    static lv_disp_drv_t disp_drv;\n    lv_disp_drv_init( &disp_drv );\n    /*Change the following line to your display resolution*/\n    disp_drv.hor_res = screenWidth;\n    disp_drv.ver_res = screenHeight;\n    disp_drv.flush_cb = my_disp_flush;\n    disp_drv.draw_buf = &draw_buf;\n    lv_disp_drv_register( &disp_drv );\n\n    /*Initialize the (dummy) input device driver*/\n    static lv_indev_drv_t indev_drv;\n    lv_indev_drv_init( &indev_drv );\n    indev_drv.type = LV_INDEV_TYPE_POINTER;\n    indev_drv.read_cb = my_touchpad_read;\n    lv_indev_drv_register( &indev_drv );\n\n#if 0\n    /* Create simple label */\n    lv_obj_t *label = lv_label_create( lv_scr_act() );\n    lv_label_set_text( label, LVGL_Arduino.c_str() );\n    lv_obj_align( label, LV_ALIGN_CENTER, 0, 0 );\n#else\n    /* Try an example from the lv_examples Arduino library\n       make sure to include it as written above.\n    lv_example_btn_1();\n   */\n\n    // uncomment one of these demos\n    lv_demo_widgets();            // OK\n    // lv_demo_benchmark();          // OK\n    // lv_demo_keypad_encoder();     // works, but I haven't an encoder\n    // lv_demo_music();              // NOK\n    // lv_demo_printer();\n    // lv_demo_stress();             // seems to be OK\n#endif\n    Serial.println( \"Setup done\" );\n}\n\nvoid loop()\n{\n    lv_timer_handler(); /* let the GUI do its work */\n    delay( 5 );\n}\n"}}}Content-Length: 309

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/zhang%27pei/Documents/Arduino/libraries/lvgl/examples/arduino/LVGL_Arduino/LVGL_Arduino.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}






Started logging.

<<<
Content-Length: 3179

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":23452,"clientInfo":{"name":"vscode","version":"1.50.0"},"rootPath":"c:\\Users\\zhang'pei\\Documents\\Arduino\\libraries\\lvgl\\examples\\arduino\\LVGL_Arduino","rootUri":"file:///c%3A/Users/zhang%27pei/Documents/Arduino/libraries/lvgl/examples/arduino/LVGL_Arduino","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/zhang%27pei/Documents/Arduino/libraries/lvgl/examples/arduino/LVGL_Arduino","name":"LVGL_Arduino"}]}}
>>>
Content-Length: 598

{"id":0,"result":{"capabilities":{"textDocumentSync":2,"hoverProvider":true,"completionProvider":{"triggerCharacters":[".","\u003e",":"]},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":true,"documentHighlightProvider":true,"documentSymbolProvider":true,"workspaceSymbolProvider":true,"codeActionProvider":true,"documentFormattingProvider":true,"documentRangeFormattingProvider":true,"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":false,"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]}}},"jsonrpc":"2.0"}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4258

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/zhang%27pei/Documents/Arduino/libraries/lvgl/examples/arduino/LVGL_Arduino/LVGL_Arduino.ino","languageId":"cpp","version":1,"text":"#include <lvgl.h>\n#include <TFT_eSPI.h>\n/*If you want to use the LVGL examples,\n  make sure to install the lv_examples Arduino library\n  and uncomment the following line.\n#include <lv_examples.h>\n*/\n\n#include <lv_demo.h>\n\n/*Change to your screen resolution*/\nstatic const uint16_t screenWidth  = 480;\nstatic const uint16_t screenHeight = 320;\n\nstatic lv_disp_draw_buf_t draw_buf;\nstatic lv_color_t buf[ screenWidth * 10 ];\n\nTFT_eSPI tft = TFT_eSPI(screenWidth, screenHeight); /* TFT instance */\n\n#if LV_USE_LOG != 0\n/* Serial debugging */\nvoid my_print(const char * buf)\n{\n    Serial.printf(buf);\n    Serial.flush();\n}\n#endif\n\n/* Display flushing */\nvoid my_disp_flush( lv_disp_drv_t *disp, const lv_area_t *area, lv_color_t *color_p )\n{\n    uint32_t w = ( area->x2 - area->x1 + 1 );\n    uint32_t h = ( area->y2 - area->y1 + 1 );\n\n    tft.startWrite();\n    tft.setAddrWindow( area->x1, area->y1, w, h );\n    tft.pushColors( ( uint16_t * )&color_p->full, w * h, true );\n    tft.endWrite();\n\n    lv_disp_flush_ready( disp );\n}\n\n/*Read the touchpad*/\nvoid my_touchpad_read( lv_indev_drv_t * indev_driver, lv_indev_data_t * data )\n{\n    uint16_t touchX, touchY;\n\n    bool touched = tft.getTouch( &touchX, &touchY, 600 );\n\n    if( !touched )\n    {\n        data->state = LV_INDEV_STATE_REL;\n    }\n    else\n    {\n        data->state = LV_INDEV_STATE_PR;\n\n        /*Set the coordinates*/\n        data->point.x = touchX;\n        data->point.y = touchY;\n\n        Serial.print( \"Data x \" );\n        Serial.println( touchX );\n\n        Serial.print( \"Data y \" );\n        Serial.println( touchY );\n    }\n}\n\nvoid setup()\n{\n    Serial.begin( 115200 ); /* prepare for possible serial debug */\n\n    String LVGL_Arduino = \"Hello Arduino! \";\n    LVGL_Arduino += String('V') + lv_version_major() + \".\" + lv_version_minor() + \".\" + lv_version_patch();\n\n    Serial.println( LVGL_Arduino );\n    Serial.println( \"I am LVGL_Arduino\" );\n\n    lv_init();\n\n#if LV_USE_LOG != 0\n    lv_log_register_print_cb( my_print ); /* register print function for debugging */\n#endif\n\n    tft.begin();          /* TFT init */\n    tft.setRotation( 3 ); /* Landscape orientation, flipped */\n\n    /*Set the touchscreen calibration data,\n     the actual data for your display can be acquired using\n     the Generic -> Touch_calibrate example from the TFT_eSPI library*/\n    uint16_t calData[5] = { 275, 3620, 264, 3532, 1 };\n    tft.setTouch( calData );\n\n    lv_disp_draw_buf_init( &draw_buf, buf, NULL, screenWidth * 10 );\n\n    /*Initialize the display*/\n    static lv_disp_drv_t disp_drv;\n    lv_disp_drv_init( &disp_drv );\n    /*Change the following line to your display resolution*/\n    disp_drv.hor_res = screenWidth;\n    disp_drv.ver_res = screenHeight;\n    disp_drv.flush_cb = my_disp_flush;\n    disp_drv.draw_buf = &draw_buf;\n    lv_disp_drv_register( &disp_drv );\n\n    /*Initialize the (dummy) input device driver*/\n    static lv_indev_drv_t indev_drv;\n    lv_indev_drv_init( &indev_drv );\n    indev_drv.type = LV_INDEV_TYPE_POINTER;\n    indev_drv.read_cb = my_touchpad_read;\n    lv_indev_drv_register( &indev_drv );\n\n#if 0\n    /* Create simple label */\n    lv_obj_t *label = lv_label_create( lv_scr_act() );\n    lv_label_set_text( label, LVGL_Arduino.c_str() );\n    lv_obj_align( label, LV_ALIGN_CENTER, 0, 0 );\n#else\n    /* Try an example from the lv_examples Arduino library\n       make sure to include it as written above.\n    lv_example_btn_1();\n   */\n\n    // uncomment one of these demos\n    lv_demo_widgets();            // OK\n    // lv_demo_benchmark();          // OK\n    // lv_demo_keypad_encoder();     // works, but I haven't an encoder\n    // lv_demo_music();              // NOK\n    // lv_demo_printer();\n    // lv_demo_stress();             // seems to be OK\n#endif\n    Serial.println( \"Setup done\" );\n}\n\nvoid loop()\n{\n    lv_timer_handler(); /* let the GUI do its work */\n    delay( 5 );\n}\n"}}}Content-Length: 309

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/zhang%27pei/Documents/Arduino/libraries/lvgl/examples/arduino/LVGL_Arduino/LVGL_Arduino.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}