//
// MLEDScrollFonts these fonts are rotated 90 degrees
// normal/large
// test with icons also rotated

#include <Arduino.h>

// 
// Pseudocode for retrieving data for a specific character:
// 
// offset = ascii_code(character) - ascii_code(' ')
// data = freemono_6pt_bold[lut[offset]]
// 

const uint8_t testfont[] PROGMEM = {

  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // 0x20 ( )
  0x18,0x18,0x18,0x18,0x00,0x00,0x18,0x00,  // 0x21 (!)
  0x6C,0x6c,0x24,0x00,0x00,0x00,0x00,0x00,  // 0x22 (")
  0x66,0x66,0xFF,0x66,0xFF,0x66,0x66,0x00,  // 0x23 (#)
  0x18,0x3E,0x60,0x3C,0x06,0x7C,0x18,0x00,  // 0x24 ($)
  0x62,0x66,0x0C,0x18,0x30,0x66,0x46,0x00,  // 0x25 (%)
  0x3C,0x66,0x3C,0x38,0x67,0x66,0x3F,0x00,  // 0x26 (&)
  0x18,0x18,0x30,0x00,0x00,0x00,0x00,0x00,  // 0x27 (')
  0x0C,0x18,0x30,0x30,0x30,0x18,0x0C,0x00,  // 0x28 (()
  0x30,0x18,0x0C,0x0C,0x0C,0x18,0x30,0x00,  // 0x29 ())
  0x00,0x66,0x3C,0xFF,0x3C,0x66,0x00,0x00,  // 0x2A (*)
  0x00,0x18,0x18,0x7E,0x18,0x18,0x00,0x00,  // 0x2B (+)
  0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x30,  // 0x2C (,)
  0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,  // 0x2D (-)
  0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,  // 0x2E (.)
  0x00,0x03,0x06,0x0C,0x18,0x30,0x60,0x00,  // 0x2F (/)
  0x3C,0x66,0x6E,0x76,0x66,0x66,0x3C,0x00,  // 0x30 (0)
  0x18,0x18,0x38,0x18,0x18,0x18,0x7E,0x00,  // 0x31 (1)
  0x3C,0x66,0x06,0x0C,0x30,0x60,0x7E,0x00,  // 0x32 (2)
  0x3C,0x66,0x06,0x1C,0x06,0x66,0x3C,0x00,  // 0x33 (3)
  0x06,0x0E,0x16,0x26,0x7F,0x06,0x06,0x00,  // 0x34 (4)
  0x7E,0x60,0x7C,0x06,0x06,0x66,0x3C,0x00,  // 0x35 (5)
  0x3C,0x66,0x60,0x7C,0x66,0x66,0x3C,0x00,  // 0x36 (6)
  0x7E,0x66,0x0C,0x18,0x18,0x18,0x18,0x00,  // 0x37 (7)
  0x3C,0x66,0x66,0x3C,0x66,0x66,0x3C,0x00,  // 0x38 (8)
  0x3C,0x66,0x66,0x3E,0x06,0x66,0x3C,0x00,  // 0x39 (9)
  0x00,0x00,0x18,0x00,0x00,0x18,0x00,0x00,  // 0x3A (:)
  0x00,0x00,0x18,0x00,0x00,0x18,0x18,0x30,  // 0x3B (;)
  0x0E,0x18,0x30,0x60,0x30,0x18,0x0E,0x00,  // 0x3C (<)
  0x00,0x00,0x7E,0x00,0x7E,0x00,0x00,0x00,  // 0x3D (=)
  0x70,0x18,0x0C,0x06,0x0C,0x18,0x70,0x00,  // 0x3E (>)
  0x3C,0x66,0x06,0x0C,0x18,0x00,0x18,0x00,  // 0x3F (?)
  0x3C,0x66,0x6E,0x6E,0x60,0x62,0x3C,0x00,  // 0x40 (@)
  0x18,0x3C,0x66,0x7E,0x66,0x66,0x66,0x00,  // 0x41 (A)
  0x7C,0x66,0x66,0x7C,0x66,0x66,0x7C,0x00,  // 0x42 (B)
  0x3C,0x66,0x60,0x60,0x60,0x66,0x3C,0x00,  // 0x43 (C)
  0x78,0x6C,0x66,0x66,0x66,0x6C,0x78,0x00,  // 0x44 (D)
  0x7E,0x60,0x60,0x78,0x60,0x60,0x7E,0x00,  // 0x45 (E)
  0x7E,0x60,0x60,0x78,0x60,0x60,0x60,0x00,  // 0x46 (F)
  0x3C,0x66,0x60,0x6E,0x66,0x66,0x3C,0x00,  // 0x47 (G)
  0x66,0x66,0x66,0x7E,0x66,0x66,0x66,0x00,  // 0x48 (H)
  0x3C,0x18,0x18,0x18,0x18,0x18,0x3C,0x00,  // 0x49 (I)
  0x1E,0x0C,0x0C,0x0C,0x0C,0x6C,0x38,0x00,  // 0x4A (J)
  0x66,0x6C,0x78,0x70,0x78,0x6C,0x66,0x00,  // 0x4B (K)
  0x60,0x60,0x60,0x60,0x60,0x60,0x7E,0x00,  // 0x4C (L)
  0x63,0x77,0x7F,0x6B,0x63,0x63,0x63,0x00,  // 0x4D (M)
  0x66,0x76,0x7E,0x7E,0x6E,0x66,0x66,0x00,  // 0x4E (N)
  0x3C,0x66,0x66,0x66,0x66,0x66,0x3C,0x00,  // 0x4F (O)
  0x7C,0x66,0x66,0x7C,0x60,0x60,0x60,0x00,  // 0x50 (P)
  0x3C,0x66,0x66,0x66,0x66,0x3C,0x0E,0x00,  // 0x51 (Q)
  0x7C,0x66,0x66,0x7C,0x78,0x6C,0x66,0x00,  // 0x52 (R)
  0x3C,0x66,0x60,0x3C,0x06,0x66,0x3C,0x00,  // 0x53 (S)
 0x7E,0x81,0x3C,0x42,0x18,0x24,0x18,0x18,  // 0x101 (WiFi)
  0x66,0x66,0x66,0x66,0x66,0x66,0x3C,0x00,  // 0x55 (U)
  0x66,0x66,0x66,0x66,0x66,0x3C,0x18,0x00,  // 0x56 (V)
  0x63,0x63,0x63,0x6B,0x7F,0x77,0x63,0x00,  // 0x57 (W)
  0x66,0x66,0x3C,0x18,0x3C,0x66,0x66,0x00,  // 0x58 (X)
  0x66,0x66,0x66,0x3C,0x18,0x18,0x18,0x00,  // 0x59 (Y)
  0x7E,0x06,0x0C,0x18,0x30,0x60,0x7E,0x00,  // 0x5A (Z)
  0x3C,0x30,0x30,0x30,0x30,0x30,0x3C,0x00,  // 0x5B ([)
  0x00,0x60,0x30,0x18,0x0C,0x06,0x03,0x00,  // 0x5C (\)
  0x3C,0x0C,0x0C,0x0C,0x0C,0x0C,0x3C,0x00,  // 0x5D (])
  0x18,0x24,0x42,0x00,0x00,0x00,0x00,0x00,  // 0x5E (^)
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,  // 0x5F (_)
  0x18,0x18,0x0C,0x00,0x00,0x00,0x00,0x00,  // 0x60 (`)
  0x00,0x00,0x3C,0x06,0x3E,0x66,0x3E,0x00,  // 0x61 (a)
  0x00,0x60,0x60,0x7C,0x66,0x66,0x7C,0x00,  // 0x62 (b)
  0x00,0x00,0x3C,0x60,0x60,0x60,0x3C,0x00,  // 0x63 (c)
  0x00,0x06,0x06,0x3E,0x66,0x66,0x3E,0x00,  // 0x64 (d)
  0x18,0x5A,0x99,0x99,0x81,0x81,0x42,0x3C,   // 0x103 (Power)
  0x00,0x0E,0x18,0x3E,0x18,0x18,0x18,0x00,  // 0x66 (f)
  0x00,0x00,0x3E,0x66,0x66,0x3E,0x06,0x7C,  // 0x67 (g)
  0x7E,0xE7,0xE7,0xE7,0x81,0xC3,0xE7,0x7E,  // 0x102 (Download)
  0x00,0x18,0x00,0x38,0x18,0x18,0x3C,0x00,  // 0x69 (i)
  0x00,0x06,0x00,0x06,0x06,0x06,0x06,0x3C,  // 0x6A (j)
  0x00,0x60,0x60,0x6C,0x78,0x6C,0x66,0x00,  // 0x6B (k)
  0x00,0x38,0x18,0x18,0x18,0x18,0x3C,0x00,  // 0x6C (l)
  0x00,0x00,0x66,0x7F,0x7F,0x6B,0x63,0x00,  // 0x6D (m)
  0x00,0x00,0x7C,0x66,0x66,0x66,0x66,0x00,  // 0x6E (n)
  0x00,0x00,0x3C,0x66,0x66,0x66,0x3C,0x00,  // 0x6F (o)
  0x00,0x00,0x7C,0x66,0x66,0x7C,0x60,0x60,  // 0x70 (p)
  0x00,0x00,0x3E,0x66,0x66,0x3E,0x06,0x06,  // 0x71 (q)
  0x00,0x00,0x7C,0x66,0x60,0x60,0x60,0x00,  // 0x72 (r)
  0x00,0x00,0x3E,0x60,0x3C,0x06,0x7C,0x00,  // 0x73 (s)
  0x00,0x18,0x7E,0x18,0x18,0x18,0x0E,0x00,  // 0x74 (t)
  0x00,0x00,0x66,0x66,0x66,0x66,0x3E,0x00,  // 0x75 (u)
  0x00,0x00,0x66,0x66,0x66,0x3C,0x18,0x00,  // 0x76 (v)
  0x00,0x00,0x63,0x6B,0x7F,0x3E,0x36,0x00,  // 0x77 (w)
  0x00,0x00,0x66,0x3C,0x18,0x3C,0x66,0x00,  // 0x78 (x)
  0x00,0x00,0x66,0x66,0x66,0x3E,0x0C,0x78,  // 0x79 (y)
  0x00,0x00,0x7E,0x0C,0x18,0x30,0x7E,0x00,  // 0x7A (z)
  0x1C,0x30,0x30,0x60,0x30,0x30,0x1C,0x00,  // 0x7B ({)
  0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x00,  // 0x7C (|)
  0x38,0x0C,0x0C,0x06,0x0C,0x0C,0x38,0x00,  // 0x7D (})
  0x3C,0x42,0xA5,0x81,0xA5,0x99,0x42,0x3C,  // 0x7E (~)
};
